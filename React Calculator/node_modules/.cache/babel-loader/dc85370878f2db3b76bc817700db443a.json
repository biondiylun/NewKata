{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\biondil\\\\Documents\\\\GitHub\\\\NewKata\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport CalcButton from './CalcButton';\nimport buttonType from './buttonType';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      storedValue: 0,\n      currentValue: 0,\n      buttonComponents: buttonType,\n      field: \"\"\n    };\n    this.updateCurrentNumber = this.updateCurrentNumber.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  updateCurrentNumber(event) {\n    this.setState({\n      currentValue: event.target.value\n    });\n  }\n\n  handleButtonClick(event) {\n    this.setState({\n      storedValue: this.currentValue,\n      currentValue: 0\n    });\n  }\n\n  render() {\n    const buttonComponents = this.state.buttonComponents.map(mathType => React.createElement(CalcButton, {\n      key: mathType.id,\n      calcButton: mathType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Stored Number:\", this.state.storedValue), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Current Number:\", this.state.currentValue), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"enterValue\",\n      onChange: this.updateCurrentNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, buttonComponents));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/biondil/Documents/GitHub/NewKata/src/App.js"],"names":["React","CalcButton","buttonType","App","Component","constructor","state","storedValue","currentValue","buttonComponents","field","updateCurrentNumber","bind","handleButtonClick","event","setState","target","value","render","map","mathType","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,YAAY,EAAE,CAFH;AAGXC,MAAAA,gBAAgB,EAAEP,UAHP;AAIXQ,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,mBAAmB,CAACG,KAAD,EAAO;AACxB,SAAKC,QAAL,CAAc;AACZP,MAAAA,YAAY,EAAEM,KAAK,CAACE,MAAN,CAAaC;AADf,KAAd;AAGD;;AAEDJ,EAAAA,iBAAiB,CAACC,KAAD,EAAO;AACpB,SAAKC,QAAL,CAAc;AACZR,MAAAA,WAAW,EAAE,KAAKC,YADN;AAEZA,MAAAA,YAAY,EAAE;AAFF,KAAd;AAIH;;AAEDU,EAAAA,MAAM,GAAE;AACN,UAAMT,gBAAgB,GAAG,KAAKH,KAAL,CAAWG,gBAAX,CAA4BU,GAA5B,CAAgCC,QAAQ,IAAI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAA1B;AAA8B,MAAA,UAAU,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CAAzB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKd,KAAL,CAAWC,WAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,KAAKD,KAAL,CAAWE,YAA9B,CAFF,EAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,QAAQ,EAAE,KAAKG,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,gBAAJ,CAJF,CADF;AAQD;;AApC8B;;AAuCjC,eAAeN,GAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport CalcButton from './CalcButton'\r\nimport buttonType from './buttonType'\r\n\r\nclass App extends React.Component{\r\n  constructor() {\r\n      super()\r\n      this.state = {\r\n        storedValue: 0,\r\n        currentValue: 0,\r\n        buttonComponents: buttonType,\r\n        field: \"\"\r\n      }\r\n      this.updateCurrentNumber = this.updateCurrentNumber.bind(this)\r\n      this.handleButtonClick = this.handleButtonClick.bind(this)\r\n  }\r\n\r\n  updateCurrentNumber(event){\r\n    this.setState({\r\n      currentValue: event.target.value\r\n    });\r\n  }\r\n\r\n  handleButtonClick(event){\r\n      this.setState({\r\n        storedValue: this.currentValue,\r\n        currentValue: 0\r\n      }) \r\n  }\r\n\r\n  render(){\r\n    const buttonComponents = this.state.buttonComponents.map(mathType => <CalcButton key={mathType.id} calcButton={mathType}/>)\r\n    return (\r\n      <div>\r\n        <p>Stored Number:{this.state.storedValue}</p>\r\n        <p>Current Number:{this.state.currentValue}</p>\r\n        <input type=\"text\" name=\"enterValue\" onChange={this.updateCurrentNumber}/>\r\n        <p>{buttonComponents}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}